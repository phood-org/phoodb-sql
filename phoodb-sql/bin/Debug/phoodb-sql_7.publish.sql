/*
Deployment script for phoodb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "phoodb"
:setvar DefaultFilePrefix "phoodb"
:setvar DefaultDataPath "C:\Users\Pearse.Hutson\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\Pearse.Hutson\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET PAGE_VERIFY NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
USE [$(DatabaseName)];


GO
PRINT N'Rename refactoring operation with key cde522ab-a420-4999-84f9-74c27a6b832e is skipped, element [dbo].[category].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key 08b9a1ba-0d22-4874-9da7-0a9c5533564a is skipped, element [dbo].[enduser].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key 5093e3be-fed1-4abb-a3e4-c34ce87edef8 is skipped, element [dbo].[ingredient].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key c669a221-7314-4999-8e25-b5c399d86e43 is skipped, element [dbo].[library].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key b08d5a4c-0afd-418e-a125-da9cf5e9b163 is skipped, element [dbo].[recipe].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key 794abfee-87f8-46e6-a4eb-2fc69cde290e is skipped, element [dbo].[utensil].[Id] (SqlSimpleColumn) will not be renamed to ID';


GO
PRINT N'Rename refactoring operation with key c5c0ee7a-b3fe-4bb4-aeb2-08df87ad2b2f, 0010d1cb-a3cf-4024-abe7-f9bcdfc3d4ec is skipped, element [dbo].[recCat].[Id] (SqlSimpleColumn) will not be renamed to CatId';


GO
PRINT N'Rename refactoring operation with key 300456a1-2b5c-4699-b5db-0192673b3d31 is skipped, element [dbo].[recIngred].[Id] (SqlSimpleColumn) will not be renamed to RecId';


GO
PRINT N'Rename refactoring operation with key bea438fd-c279-49e6-9ec0-3216a8b5c864 is skipped, element [dbo].[recLib].[Id] (SqlSimpleColumn) will not be renamed to RecId';


GO
PRINT N'Rename refactoring operation with key 77e6e37a-9bbe-41bf-8cf6-ad11b8d9ee79 is skipped, element [dbo].[recRate].[Id] (SqlSimpleColumn) will not be renamed to UserId';


GO
PRINT N'Rename refactoring operation with key 7936ea70-bb71-4e0b-9405-26c0ea4dfa04 is skipped, element [dbo].[RecUten].[Id] (SqlSimpleColumn) will not be renamed to RecId';


GO
PRINT N'Rename refactoring operation with key 7044c519-4157-446b-a9d8-2696bfcad9e6 is skipped, element [dbo].[userIngred].[Id] (SqlSimpleColumn) will not be renamed to UserId';


GO
PRINT N'Rename refactoring operation with key 64bb66f2-dc34-4e0f-afb2-829632bdf5a1 is skipped, element [dbo].[userLib].[Id] (SqlSimpleColumn) will not be renamed to UserId';


GO
PRINT N'Rename refactoring operation with key 06c757f6-1df2-4963-bb17-fed5e5b7a3c9 is skipped, element [dbo].[userUten].[Id] (SqlSimpleColumn) will not be renamed to UserId';


GO
PRINT N'Creating [dbo].[category]...';


GO
CREATE TABLE [dbo].[category] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[enduser]...';


GO
CREATE TABLE [dbo].[enduser] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ingredient]...';


GO
CREATE TABLE [dbo].[ingredient] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[library]...';


GO
CREATE TABLE [dbo].[library] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[recCat]...';


GO
CREATE TABLE [dbo].[recCat] (
    [CatId] INT NOT NULL,
    [RecId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CatId] ASC, [RecId] ASC)
);


GO
PRINT N'Creating [dbo].[recIngred]...';


GO
CREATE TABLE [dbo].[recIngred] (
    [RecId]    INT            NOT NULL,
    [IngredId] INT            NOT NULL,
    [Amt]      DECIMAL (6, 3) NULL,
    [Unit]     VARCHAR (50)   NULL,
    PRIMARY KEY CLUSTERED ([RecId] ASC, [IngredId] ASC)
);


GO
PRINT N'Creating [dbo].[recipe]...';


GO
CREATE TABLE [dbo].[recipe] (
    [ID]           INT            IDENTITY (1, 1) NOT NULL,
    [Name]         VARCHAR (200)  NULL,
    [CookTime]     DECIMAL (6, 3) NULL,
    [CookUnit]     VARCHAR (10)   NULL,
    [Instructions] VARCHAR (MAX)  NULL,
    [Yield]        VARCHAR (100)  NULL,
    [ServeMin]     INT            NULL,
    [ServeMax]     INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[recLib]...';


GO
CREATE TABLE [dbo].[recLib] (
    [RecId] INT NOT NULL,
    [LibId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RecId] ASC, [LibId] ASC)
);


GO
PRINT N'Creating [dbo].[recRate]...';


GO
CREATE TABLE [dbo].[recRate] (
    [UserId] INT NOT NULL,
    [RecId]  INT NOT NULL,
    [Rate]   INT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [RecId] ASC)
);


GO
PRINT N'Creating [dbo].[RecUten]...';


GO
CREATE TABLE [dbo].[RecUten] (
    [RecId]  INT NOT NULL,
    [UtenId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RecId] ASC, [UtenId] ASC)
);


GO
PRINT N'Creating [dbo].[userIngred]...';


GO
CREATE TABLE [dbo].[userIngred] (
    [UserId]   INT            NOT NULL,
    [IngredId] INT            NOT NULL,
    [Amt]      DECIMAL (6, 3) NULL,
    [Unit]     VARCHAR (50)   NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [IngredId] ASC)
);


GO
PRINT N'Creating [dbo].[userLib]...';


GO
CREATE TABLE [dbo].[userLib] (
    [UserId] INT NOT NULL,
    [LibId]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [LibId] ASC)
);


GO
PRINT N'Creating [dbo].[userUten]...';


GO
CREATE TABLE [dbo].[userUten] (
    [UserId] INT NOT NULL,
    [UtenId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [UtenId] ASC)
);


GO
PRINT N'Creating [dbo].[utensil]...';


GO
CREATE TABLE [dbo].[utensil] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[recCat]...';


GO
ALTER TABLE [dbo].[recCat] WITH NOCHECK
    ADD FOREIGN KEY ([CatId]) REFERENCES [dbo].[category] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recCat]...';


GO
ALTER TABLE [dbo].[recCat] WITH NOCHECK
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recIngred]...';


GO
ALTER TABLE [dbo].[recIngred] WITH NOCHECK
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recIngred]...';


GO
ALTER TABLE [dbo].[recIngred] WITH NOCHECK
    ADD FOREIGN KEY ([IngredId]) REFERENCES [dbo].[ingredient] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recLib]...';


GO
ALTER TABLE [dbo].[recLib] WITH NOCHECK
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recLib]...';


GO
ALTER TABLE [dbo].[recLib] WITH NOCHECK
    ADD FOREIGN KEY ([LibId]) REFERENCES [dbo].[library] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recRate]...';


GO
ALTER TABLE [dbo].[recRate] WITH NOCHECK
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recRate]...';


GO
ALTER TABLE [dbo].[recRate] WITH NOCHECK
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[RecUten]...';


GO
ALTER TABLE [dbo].[RecUten] WITH NOCHECK
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[RecUten]...';


GO
ALTER TABLE [dbo].[RecUten] WITH NOCHECK
    ADD FOREIGN KEY ([UtenId]) REFERENCES [dbo].[utensil] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userIngred]...';


GO
ALTER TABLE [dbo].[userIngred] WITH NOCHECK
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userIngred]...';


GO
ALTER TABLE [dbo].[userIngred] WITH NOCHECK
    ADD FOREIGN KEY ([IngredId]) REFERENCES [dbo].[ingredient] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userLib]...';


GO
ALTER TABLE [dbo].[userLib] WITH NOCHECK
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userLib]...';


GO
ALTER TABLE [dbo].[userLib] WITH NOCHECK
    ADD FOREIGN KEY ([LibId]) REFERENCES [dbo].[library] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userUten]...';


GO
ALTER TABLE [dbo].[userUten] WITH NOCHECK
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userUten]...';


GO
ALTER TABLE [dbo].[userUten] WITH NOCHECK
    ADD FOREIGN KEY ([UtenId]) REFERENCES [dbo].[utensil] ([ID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cde522ab-a420-4999-84f9-74c27a6b832e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cde522ab-a420-4999-84f9-74c27a6b832e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '08b9a1ba-0d22-4874-9da7-0a9c5533564a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('08b9a1ba-0d22-4874-9da7-0a9c5533564a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5093e3be-fed1-4abb-a3e4-c34ce87edef8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5093e3be-fed1-4abb-a3e4-c34ce87edef8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c669a221-7314-4999-8e25-b5c399d86e43')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c669a221-7314-4999-8e25-b5c399d86e43')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b08d5a4c-0afd-418e-a125-da9cf5e9b163')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b08d5a4c-0afd-418e-a125-da9cf5e9b163')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '794abfee-87f8-46e6-a4eb-2fc69cde290e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('794abfee-87f8-46e6-a4eb-2fc69cde290e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c5c0ee7a-b3fe-4bb4-aeb2-08df87ad2b2f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c5c0ee7a-b3fe-4bb4-aeb2-08df87ad2b2f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0010d1cb-a3cf-4024-abe7-f9bcdfc3d4ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0010d1cb-a3cf-4024-abe7-f9bcdfc3d4ec')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '300456a1-2b5c-4699-b5db-0192673b3d31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('300456a1-2b5c-4699-b5db-0192673b3d31')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bea438fd-c279-49e6-9ec0-3216a8b5c864')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bea438fd-c279-49e6-9ec0-3216a8b5c864')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '77e6e37a-9bbe-41bf-8cf6-ad11b8d9ee79')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('77e6e37a-9bbe-41bf-8cf6-ad11b8d9ee79')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7936ea70-bb71-4e0b-9405-26c0ea4dfa04')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7936ea70-bb71-4e0b-9405-26c0ea4dfa04')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7044c519-4157-446b-a9d8-2696bfcad9e6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7044c519-4157-446b-a9d8-2696bfcad9e6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '64bb66f2-dc34-4e0f-afb2-829632bdf5a1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('64bb66f2-dc34-4e0f-afb2-829632bdf5a1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '06c757f6-1df2-4963-bb17-fed5e5b7a3c9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('06c757f6-1df2-4963-bb17-fed5e5b7a3c9')

GO

GO
PRINT N'Checking existing data against newly created constraints';


GO
USE [$(DatabaseName)];


GO
CREATE TABLE [#__checkStatus] (
    id           INT            IDENTITY (1, 1) PRIMARY KEY CLUSTERED,
    [Schema]     NVARCHAR (256),
    [Table]      NVARCHAR (256),
    [Constraint] NVARCHAR (256)
);

SET NOCOUNT ON;

DECLARE tableconstraintnames CURSOR LOCAL FORWARD_ONLY
    FOR SELECT SCHEMA_NAME([schema_id]),
               OBJECT_NAME([parent_object_id]),
               [name],
               0
        FROM   [sys].[objects]
        WHERE  [parent_object_id] IN (OBJECT_ID(N'dbo.recCat'), OBJECT_ID(N'dbo.recIngred'), OBJECT_ID(N'dbo.recLib'), OBJECT_ID(N'dbo.recRate'), OBJECT_ID(N'dbo.RecUten'), OBJECT_ID(N'dbo.userIngred'), OBJECT_ID(N'dbo.userLib'), OBJECT_ID(N'dbo.userUten'))
               AND [type] IN (N'F', N'C')
                   AND [object_id] IN (SELECT [object_id]
                                       FROM   [sys].[check_constraints]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0
                                       UNION
                                       SELECT [object_id]
                                       FROM   [sys].[foreign_keys]
                                       WHERE  [is_not_trusted] <> 0
                                              AND [is_disabled] = 0);

DECLARE @schemaname AS NVARCHAR (256);

DECLARE @tablename AS NVARCHAR (256);

DECLARE @checkname AS NVARCHAR (256);

DECLARE @is_not_trusted AS INT;

DECLARE @statement AS NVARCHAR (1024);

BEGIN TRY
    OPEN tableconstraintnames;
    FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
    WHILE @@fetch_status = 0
        BEGIN
            PRINT N'Checking constraint: ' + @checkname + N' [' + @schemaname + N'].[' + @tablename + N']';
            SET @statement = N'ALTER TABLE [' + @schemaname + N'].[' + @tablename + N'] WITH ' + CASE @is_not_trusted WHEN 0 THEN N'CHECK' ELSE N'NOCHECK' END + N' CHECK CONSTRAINT [' + @checkname + N']';
            BEGIN TRY
                EXECUTE [sp_executesql] @statement;
            END TRY
            BEGIN CATCH
                INSERT  [#__checkStatus] ([Schema], [Table], [Constraint])
                VALUES                  (@schemaname, @tablename, @checkname);
            END CATCH
            FETCH tableconstraintnames INTO @schemaname, @tablename, @checkname, @is_not_trusted;
        END
END TRY
BEGIN CATCH
    PRINT ERROR_MESSAGE();
END CATCH

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') >= 0
    CLOSE tableconstraintnames;

IF CURSOR_STATUS(N'LOCAL', N'tableconstraintnames') = -1
    DEALLOCATE tableconstraintnames;

SELECT N'Constraint verification failed:' + [Schema] + N'.' + [Table] + N',' + [Constraint]
FROM   [#__checkStatus];

IF @@ROWCOUNT > 0
    BEGIN
        DROP TABLE [#__checkStatus];
        RAISERROR (N'An error occurred while verifying constraints', 16, 127);
    END

SET NOCOUNT OFF;

DROP TABLE [#__checkStatus];


GO
PRINT N'Update complete.';


GO
