/*
Deployment script for phoodb

This code was generated by a tool.
Changes to this file may cause incorrect behavior and will be lost if
the code is regenerated.
*/

GO
SET ANSI_NULLS, ANSI_PADDING, ANSI_WARNINGS, ARITHABORT, CONCAT_NULL_YIELDS_NULL, QUOTED_IDENTIFIER ON;

SET NUMERIC_ROUNDABORT OFF;


GO
:setvar DatabaseName "phoodb"
:setvar DefaultFilePrefix "phoodb"
:setvar DefaultDataPath "C:\Users\hhuts\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"
:setvar DefaultLogPath "C:\Users\hhuts\AppData\Local\Microsoft\Microsoft SQL Server Local DB\Instances\MSSQLLocalDB"

GO
:on error exit
GO
/*
Detect SQLCMD mode and disable script execution if SQLCMD mode is not supported.
To re-enable the script after enabling SQLCMD mode, execute the following:
SET NOEXEC OFF; 
*/
:setvar __IsSqlCmdEnabled "True"
GO
IF N'$(__IsSqlCmdEnabled)' NOT LIKE N'True'
    BEGIN
        PRINT N'SQLCMD mode must be enabled to successfully execute this script.';
        SET NOEXEC ON;
    END


GO
USE [master];


GO

IF (DB_ID(N'$(DatabaseName)') IS NOT NULL) 
BEGIN
    ALTER DATABASE [$(DatabaseName)]
    SET SINGLE_USER WITH ROLLBACK IMMEDIATE;
    DROP DATABASE [$(DatabaseName)];
END

GO
PRINT N'Creating $(DatabaseName)...'
GO
CREATE DATABASE [$(DatabaseName)]
    ON 
    PRIMARY(NAME = [$(DatabaseName)], FILENAME = N'$(DefaultDataPath)$(DefaultFilePrefix)_Primary.mdf')
    LOG ON (NAME = [$(DatabaseName)_log], FILENAME = N'$(DefaultLogPath)$(DefaultFilePrefix)_Primary.ldf') COLLATE SQL_Latin1_General_CP1_CI_AS
GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ANSI_NULLS ON,
                ANSI_PADDING ON,
                ANSI_WARNINGS ON,
                ARITHABORT ON,
                CONCAT_NULL_YIELDS_NULL ON,
                NUMERIC_ROUNDABORT OFF,
                QUOTED_IDENTIFIER ON,
                ANSI_NULL_DEFAULT ON,
                CURSOR_DEFAULT LOCAL,
                CURSOR_CLOSE_ON_COMMIT OFF,
                AUTO_CREATE_STATISTICS ON,
                AUTO_SHRINK OFF,
                AUTO_UPDATE_STATISTICS ON,
                RECURSIVE_TRIGGERS OFF 
            WITH ROLLBACK IMMEDIATE;
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CLOSE OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET ALLOW_SNAPSHOT_ISOLATION OFF;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET READ_COMMITTED_SNAPSHOT OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_UPDATE_STATISTICS_ASYNC OFF,
                PAGE_VERIFY NONE,
                DATE_CORRELATION_OPTIMIZATION OFF,
                DISABLE_BROKER,
                PARAMETERIZATION SIMPLE,
                SUPPLEMENTAL_LOGGING OFF 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET TRUSTWORTHY OFF,
        DB_CHAINING OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
IF IS_SRVROLEMEMBER(N'sysadmin') = 1
    BEGIN
        IF EXISTS (SELECT 1
                   FROM   [master].[dbo].[sysdatabases]
                   WHERE  [name] = N'$(DatabaseName)')
            BEGIN
                EXECUTE sp_executesql N'ALTER DATABASE [$(DatabaseName)]
    SET HONOR_BROKER_PRIORITY OFF 
    WITH ROLLBACK IMMEDIATE';
            END
    END
ELSE
    BEGIN
        PRINT N'The database settings cannot be modified. You must be a SysAdmin to apply these settings.';
    END


GO
ALTER DATABASE [$(DatabaseName)]
    SET TARGET_RECOVERY_TIME = 0 SECONDS 
    WITH ROLLBACK IMMEDIATE;


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET FILESTREAM(NON_TRANSACTED_ACCESS = OFF),
                CONTAINMENT = NONE 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET AUTO_CREATE_STATISTICS ON(INCREMENTAL = OFF),
                MEMORY_OPTIMIZED_ELEVATE_TO_SNAPSHOT = OFF,
                DELAYED_DURABILITY = DISABLED 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE [$(DatabaseName)]
            SET QUERY_STORE (QUERY_CAPTURE_MODE = AUTO, OPERATION_MODE = READ_WRITE, FLUSH_INTERVAL_SECONDS = 900, INTERVAL_LENGTH_MINUTES = 60, MAX_PLANS_PER_QUERY = 200, CLEANUP_POLICY = (STALE_QUERY_THRESHOLD_DAYS = 30), MAX_STORAGE_SIZE_MB = 100) 
            WITH ROLLBACK IMMEDIATE;
    END


GO
IF EXISTS (SELECT 1
           FROM   [master].[dbo].[sysdatabases]
           WHERE  [name] = N'$(DatabaseName)')
    BEGIN
        ALTER DATABASE SCOPED CONFIGURATION SET MAXDOP = 0;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET MAXDOP = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET LEGACY_CARDINALITY_ESTIMATION = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET LEGACY_CARDINALITY_ESTIMATION = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET PARAMETER_SNIFFING = ON;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET PARAMETER_SNIFFING = PRIMARY;
        ALTER DATABASE SCOPED CONFIGURATION SET QUERY_OPTIMIZER_HOTFIXES = OFF;
        ALTER DATABASE SCOPED CONFIGURATION FOR SECONDARY SET QUERY_OPTIMIZER_HOTFIXES = PRIMARY;
    END


GO
USE [$(DatabaseName)];


GO
IF fulltextserviceproperty(N'IsFulltextInstalled') = 1
    EXECUTE sp_fulltext_database 'enable';


GO
PRINT N'Creating [dbo].[category]...';


GO
CREATE TABLE [dbo].[category] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[enduser]...';


GO
CREATE TABLE [dbo].[enduser] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[ingredient]...';


GO
CREATE TABLE [dbo].[ingredient] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[library]...';


GO
CREATE TABLE [dbo].[library] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (200) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[recCat]...';


GO
CREATE TABLE [dbo].[recCat] (
    [CatId] INT NOT NULL,
    [RecId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([CatId] ASC, [RecId] ASC)
);


GO
PRINT N'Creating [dbo].[recIngred]...';


GO
CREATE TABLE [dbo].[recIngred] (
    [RecId]      INT            NOT NULL,
    [IngredId]   INT            NOT NULL,
    [Amt]        DECIMAL (6, 3) NULL,
    [Unit]       VARCHAR (50)   NULL,
    [IngredRole] VARCHAR (50)   NULL,
    [IngredRec]  INT            NULL,
    [SubFor]     INT            NULL,
    PRIMARY KEY CLUSTERED ([RecId] ASC, [IngredId] ASC)
);


GO
PRINT N'Creating [dbo].[recipe]...';


GO
CREATE TABLE [dbo].[recipe] (
    [ID]           INT            IDENTITY (1, 1) NOT NULL,
    [Name]         VARCHAR (200)  NULL,
    [CookTime]     DECIMAL (6, 3) NULL,
    [CookUnit]     VARCHAR (10)   NULL,
    [Instructions] VARCHAR (MAX)  NULL,
    [Yield]        VARCHAR (100)  NULL,
    [ServeMin]     INT            NULL,
    [ServeMax]     INT            NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating [dbo].[recLib]...';


GO
CREATE TABLE [dbo].[recLib] (
    [RecId] INT NOT NULL,
    [LibId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RecId] ASC, [LibId] ASC)
);


GO
PRINT N'Creating [dbo].[recRate]...';


GO
CREATE TABLE [dbo].[recRate] (
    [UserId]     INT           NOT NULL,
    [RecId]      INT           NOT NULL,
    [Rate]       INT           NULL,
    [IsFavorite] BIT           NULL,
    [Review]     VARCHAR (MAX) NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [RecId] ASC)
);


GO
PRINT N'Creating [dbo].[RecUten]...';


GO
CREATE TABLE [dbo].[RecUten] (
    [RecId]  INT NOT NULL,
    [UtenId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([RecId] ASC, [UtenId] ASC)
);


GO
PRINT N'Creating [dbo].[userIngred]...';


GO
CREATE TABLE [dbo].[userIngred] (
    [UserId]   INT            NOT NULL,
    [IngredId] INT            NOT NULL,
    [Amt]      DECIMAL (6, 3) NULL,
    [Unit]     VARCHAR (50)   NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [IngredId] ASC)
);


GO
PRINT N'Creating [dbo].[userLib]...';


GO
CREATE TABLE [dbo].[userLib] (
    [UserId] INT NOT NULL,
    [LibId]  INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [LibId] ASC)
);


GO
PRINT N'Creating [dbo].[userUten]...';


GO
CREATE TABLE [dbo].[userUten] (
    [UserId] INT NOT NULL,
    [UtenId] INT NOT NULL,
    PRIMARY KEY CLUSTERED ([UserId] ASC, [UtenId] ASC)
);


GO
PRINT N'Creating [dbo].[utensil]...';


GO
CREATE TABLE [dbo].[utensil] (
    [ID]   INT           IDENTITY (1, 1) NOT NULL,
    [Name] VARCHAR (100) NULL,
    PRIMARY KEY CLUSTERED ([ID] ASC)
);


GO
PRINT N'Creating unnamed constraint on [dbo].[recIngred]...';


GO
ALTER TABLE [dbo].[recIngred]
    ADD DEFAULT ('Primary') FOR [IngredRole];


GO
PRINT N'Creating unnamed constraint on [dbo].[recCat]...';


GO
ALTER TABLE [dbo].[recCat]
    ADD FOREIGN KEY ([CatId]) REFERENCES [dbo].[category] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recCat]...';


GO
ALTER TABLE [dbo].[recCat]
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recIngred]...';


GO
ALTER TABLE [dbo].[recIngred]
    ADD FOREIGN KEY ([IngredId]) REFERENCES [dbo].[ingredient] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recIngred]...';


GO
ALTER TABLE [dbo].[recIngred]
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recLib]...';


GO
ALTER TABLE [dbo].[recLib]
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recLib]...';


GO
ALTER TABLE [dbo].[recLib]
    ADD FOREIGN KEY ([LibId]) REFERENCES [dbo].[library] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recRate]...';


GO
ALTER TABLE [dbo].[recRate]
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[recRate]...';


GO
ALTER TABLE [dbo].[recRate]
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[RecUten]...';


GO
ALTER TABLE [dbo].[RecUten]
    ADD FOREIGN KEY ([RecId]) REFERENCES [dbo].[recipe] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[RecUten]...';


GO
ALTER TABLE [dbo].[RecUten]
    ADD FOREIGN KEY ([UtenId]) REFERENCES [dbo].[utensil] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userIngred]...';


GO
ALTER TABLE [dbo].[userIngred]
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userIngred]...';


GO
ALTER TABLE [dbo].[userIngred]
    ADD FOREIGN KEY ([IngredId]) REFERENCES [dbo].[ingredient] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userLib]...';


GO
ALTER TABLE [dbo].[userLib]
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userLib]...';


GO
ALTER TABLE [dbo].[userLib]
    ADD FOREIGN KEY ([LibId]) REFERENCES [dbo].[library] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userUten]...';


GO
ALTER TABLE [dbo].[userUten]
    ADD FOREIGN KEY ([UserId]) REFERENCES [dbo].[enduser] ([ID]);


GO
PRINT N'Creating unnamed constraint on [dbo].[userUten]...';


GO
ALTER TABLE [dbo].[userUten]
    ADD FOREIGN KEY ([UtenId]) REFERENCES [dbo].[utensil] ([ID]);


GO
-- Refactoring step to update target server with deployed transaction logs

IF OBJECT_ID(N'dbo.__RefactorLog') IS NULL
BEGIN
    CREATE TABLE [dbo].[__RefactorLog] (OperationKey UNIQUEIDENTIFIER NOT NULL PRIMARY KEY)
    EXEC sp_addextendedproperty N'microsoft_database_tools_support', N'refactoring log', N'schema', N'dbo', N'table', N'__RefactorLog'
END
GO
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'cde522ab-a420-4999-84f9-74c27a6b832e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('cde522ab-a420-4999-84f9-74c27a6b832e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '08b9a1ba-0d22-4874-9da7-0a9c5533564a')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('08b9a1ba-0d22-4874-9da7-0a9c5533564a')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '5093e3be-fed1-4abb-a3e4-c34ce87edef8')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('5093e3be-fed1-4abb-a3e4-c34ce87edef8')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c669a221-7314-4999-8e25-b5c399d86e43')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c669a221-7314-4999-8e25-b5c399d86e43')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'b08d5a4c-0afd-418e-a125-da9cf5e9b163')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('b08d5a4c-0afd-418e-a125-da9cf5e9b163')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '794abfee-87f8-46e6-a4eb-2fc69cde290e')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('794abfee-87f8-46e6-a4eb-2fc69cde290e')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'c5c0ee7a-b3fe-4bb4-aeb2-08df87ad2b2f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('c5c0ee7a-b3fe-4bb4-aeb2-08df87ad2b2f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '0010d1cb-a3cf-4024-abe7-f9bcdfc3d4ec')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('0010d1cb-a3cf-4024-abe7-f9bcdfc3d4ec')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '300456a1-2b5c-4699-b5db-0192673b3d31')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('300456a1-2b5c-4699-b5db-0192673b3d31')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'bea438fd-c279-49e6-9ec0-3216a8b5c864')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('bea438fd-c279-49e6-9ec0-3216a8b5c864')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '77e6e37a-9bbe-41bf-8cf6-ad11b8d9ee79')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('77e6e37a-9bbe-41bf-8cf6-ad11b8d9ee79')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7936ea70-bb71-4e0b-9405-26c0ea4dfa04')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7936ea70-bb71-4e0b-9405-26c0ea4dfa04')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '7044c519-4157-446b-a9d8-2696bfcad9e6')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('7044c519-4157-446b-a9d8-2696bfcad9e6')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '64bb66f2-dc34-4e0f-afb2-829632bdf5a1')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('64bb66f2-dc34-4e0f-afb2-829632bdf5a1')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '06c757f6-1df2-4963-bb17-fed5e5b7a3c9')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('06c757f6-1df2-4963-bb17-fed5e5b7a3c9')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '1c920435-ed18-4d85-b1dd-30a3477d5481')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('1c920435-ed18-4d85-b1dd-30a3477d5481')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '46dcdb63-96da-4f81-90a7-53694c5b5048')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('46dcdb63-96da-4f81-90a7-53694c5b5048')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'feb3988c-b3c3-4450-a5aa-270807f1c723')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('feb3988c-b3c3-4450-a5aa-270807f1c723')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = '90e87c7b-61a3-496e-97c1-d1af3eab693f')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('90e87c7b-61a3-496e-97c1-d1af3eab693f')
IF NOT EXISTS (SELECT OperationKey FROM [dbo].[__RefactorLog] WHERE OperationKey = 'ff95242e-b5d8-4dac-84b3-6f200c6817e2')
INSERT INTO [dbo].[__RefactorLog] (OperationKey) values ('ff95242e-b5d8-4dac-84b3-6f200c6817e2')

GO

GO
DECLARE @VarDecimalSupported AS BIT;

SELECT @VarDecimalSupported = 0;

IF ((ServerProperty(N'EngineEdition') = 3)
    AND (((@@microsoftversion / power(2, 24) = 9)
          AND (@@microsoftversion & 0xffff >= 3024))
         OR ((@@microsoftversion / power(2, 24) = 10)
             AND (@@microsoftversion & 0xffff >= 1600))))
    SELECT @VarDecimalSupported = 1;

IF (@VarDecimalSupported > 0)
    BEGIN
        EXECUTE sp_db_vardecimal_storage_format N'$(DatabaseName)', 'ON';
    END


GO
PRINT N'Update complete.';


GO
